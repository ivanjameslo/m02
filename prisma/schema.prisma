// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model employees {
  id Int @id @default(autoincrement())
  emp_num Int @unique
  firstName String
  middleName String
  lastName String
  address_line String
  brgy String
  province String
  country String
  zip_code Int
  assignment assign_designation[]
  leaves leaves[]
  signatoriesEmployee signatories[] @relation("signatoriesEmployees")
  signatoriesSuperior signatories[] @relation("signatoriesSuperior")
  addnlEarnings addnlEarnings[]
  deductions deductions[]
  govtContributions govtContributions[] 
  // payroll payroll[]
}

model assign_designation {
  id Int @id @default(autoincrement())
  employees employees @relation(fields: [emp_num], references: [emp_num])
  emp_num Int @unique
  designation designation @relation(fields: [designation_id], references: [id])
  designation_id Int
  employee_type String
  basicPay Float
  status String
}

model departments {
  id Int @id @default(autoincrement())
  dept_name String
  status String 
  designation designation[]
}

model designation {
  id Int @id @default(autoincrement())
  designation_name String
  departments departments @relation(fields: [department_id], references: [id])
  department_id Int
  status String
  assign_designation assign_designation[]
}

model leaves {
  id Int @id @default(autoincrement())
  emp_num Int
  employees employees @relation(fields: [emp_num], references: [emp_num])
  start_leave_date DateTime
  end_leave_date DateTime
  leave_type String
  status String @default("Pending")
}

model signatories {
  id Int @id @default(autoincrement())
  emp_num Int @unique
  highersuperior Int
  employees employees @relation(name: "signatoriesEmployees", fields: [emp_num], references: [emp_num])
  superior employees @relation(name: "signatoriesSuperior", fields: [highersuperior], references: [emp_num])
  status String
}

model addnlEarnings {
  id Int @id @default(autoincrement())
  emp_num Int
  typeOfEarnings String
  amount Float
  date DateTime
  employees employees @relation(fields: [emp_num], references: [emp_num])
}

model deductions {
  id Int @id @default(autoincrement())
  emp_num Int
  typeOfDeductions String
  amount Float
  date DateTime
  employees employees @relation(fields: [emp_num], references: [emp_num])
}

model govtContributions {
  id Int @id @default(autoincrement())
  emp_num Int
  // basicPay Float
  sss_number String
  pagibig_number String
  philhealth_number String
  tin_number String
  sss_amount Float
  pagibig_amount Float
  philhealth_amount Float
  tin_amount Float
  date DateTime
  employees employees @relation(fields: [emp_num], references: [emp_num])
}

model payroll {
  id Int  @id @default(autoincrement())
  // emp_num Int
  payday DateTime
  start_of_cutoff DateTime
  end_of_cutoff DateTime
  basicPay Float?
  addnlEarnings Float?
  deductions Float?
  sss Float?
  pagibig Float?
  philhealth Float?
  tax Float?
  //net_pay Float
  // employees employees @relation(fields: [emp_num], references: [emp_num])
}